version: '2.1'

services:
  rabbitmq-extr:
    build:
      context: ../rabbitmq
      dockerfile: Dockerfile
    image: doex-rabbitmq:latest
    container_name: 'DoEx-rabbitmq-extraction-${NODE_ENV}'
    hostname: rabbitmq-extr
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
      - RABBITMQ_DEFAULT_VHOST=main  
    env_file:
      - .env
    volumes:
      - ../database/rabbitmq:/var/lib/rabbitmq/mnesia/rabbit@rabbitmq-extr
    ports:
      - ${AMQP_PORT_CORE}:5672
      - ${AMQP_PORT_MNGT}:15672
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 30s
      timeout: 10s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "1G"
    networks:
      - shinev2_queuelist 

  postgres-db:
    image: 'postgres:11'
    container_name: 'DoEx-postgres-${NODE_ENV}'
    restart: always
    env_file:
      - .env
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
     - ../database/postgres/postgres-${NODE_ENV}:/var/lib/postgresql/data
    healthcheck:
      test: exit 0
    networks:
      - shinev2_queuelist
  
  service:
    image: queue-list-service:latest
    container_name: 'DoEx-service-${NODE_ENV}'
    restart: always
    command: yarn start
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - ${PORT}:7006
    tty: true
    logging:
      driver: "json-file"
      options:
        max-file: "2"
        max-size: 10m
    depends_on:
      rabbitmq-extr:
        condition: service_healthy
    networks:
      - shinev2_queuelist

networks:
  shinev2_queuelist:
